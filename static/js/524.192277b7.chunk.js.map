{"version":3,"file":"static/js/524.192277b7.chunk.js","mappings":"iQAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uLAaJE,GAJcF,EAAAA,GAAAA,IAAH,gDAIHA,EAAAA,GAAAA,MAAH,4FAwBLG,GAlBQH,EAAAA,GAAAA,MAAH,obAkBGA,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,obAkBLK,EAAoBL,EAAAA,GAAAA,OAAH,ieAuBjBM,EAAQN,EAAAA,GAAAA,GAAH,yC,oBCrEZO,EAAgB,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAE1CC,EAAmB,WAE9B,IAAMC,GAAWC,EAAAA,EAAAA,MAyBXC,EAASC,EAAAA,KAAaC,MAAM,CAChCR,KAAMO,EAAAA,KAAaE,WAAWC,IAAI,GAClCT,MAAOM,EAAAA,KAAaE,WAAWC,IAAI,GACnCR,SAAUK,EAAAA,KAAaE,WAAWC,IAAI,KAExC,OACE,SAAC,KAAD,CACEX,cAAeA,EACfY,iBAAkBL,EAClBM,SA9BiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAClCC,QAAQC,IAAI,SAAUH,GAElB,IAAMI,EAAMC,KAAKC,UAAU,CACzBnB,KAAMa,EAAOb,KAAKoB,OAClBnB,MAAOY,EAAOZ,MAAMmB,OACpBlB,SAAUW,EAAOX,SAASkB,SAEhCL,QAAQC,IAAI,MAAOC,GAEfb,EACEiB,EAAAA,GAAuB,CACrBrB,KAAMa,EAAOb,KAAKoB,OAClBnB,MAAOY,EAAOZ,MAAMmB,OACpBlB,SAAUW,EAAOX,SAASkB,UAI9BN,GACD,EAYGQ,YAAY,SAJd,UAME,UAAC/B,EAAD,YACE,SAACO,EAAD,UAAO,mBACP,SAACJ,EAAD,CAAO6B,QAAQ,QAAf,SAAuB,YACvB,SAAC5B,EAAD,CAAOK,KAAK,QAAQwB,KAAK,WACzB,SAAC,KAAD,CAAcxB,KAAK,QAAQyB,UAAU,SAErC,SAAC/B,EAAD,CAAO6B,QAAQ,OAAf,SAAsB,UACtB,SAAC5B,EAAD,CAAOK,KAAK,OAAOwB,KAAK,UACxB,SAAC,KAAD,CAAcxB,KAAK,OAAOyB,UAAU,SAEpC,SAAC/B,EAAD,CAAO6B,QAAQ,WAAf,SAA0B,cAC1B,SAAC5B,EAAD,CAAOK,KAAK,WAAWwB,KAAK,cAC5B,SAAC,KAAD,CAAcxB,KAAK,WAAWyB,UAAU,SACxC,SAAC5B,EAAD,CAAmB2B,KAAK,SAAxB,SAAiC,gBAIxC,EClEc,SAASE,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,2BAAO,oBAET,SAACxB,EAAD,MAGL,C","sources":["components/RegisterUserForm/RegisterUserForm.styled.js","components/RegisterUserForm/RegisterUserForm.jsx","Pages/Register.jsx"],"sourcesContent":["import { Field as FormikField, Form as FormikForm } from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  max-width: 700px;\n  /* display: flex;\n  flex-direction: column; */\n  /* max-width: 100%; */\n  margin: 0 auto;\n  padding: 10px;\n  margin-bottom: 50px;\n`;\nexport const DivForInput = styled.div`\n  margin-bottom: 1rem;\n`;\n\nexport const Label = styled.label`\n  display: block;\n\n  margin-bottom: 2rem;\n  font-weight: bold;\n`;\nexport const Input = styled.input`\n  display: block;\n  width: 97%;\n  margin-top: 10px;\n  margin-bottom: 32px;\n  padding: 0.5rem;\n  font-size: 2rem;\n  border: 1px solid black;\n  outline: transparent;\n  border-radius: 4px;\n  /* transition: box-shadow 0.3s ease; */\n  background-color: rgb(99, 99, 255);\n  &:hover {\n    outline: 5px solid rgb(255, 255, 0);\n    border: none;\n    /* box-shadow: 0 0 5px rgba(0, 123, 255, 0.3); */\n  }\n`;\nexport const Field = styled(FormikField)`\n  display: block;\n  width: 97%;\n  margin-top: 10px;\n  margin-bottom: 32px;\n  padding: 0.5rem;\n  font-size: 2rem;\n  border: 1px solid black;\n  outline: transparent;\n  border-radius: 4px;\n  /* transition: box-shadow 0.3s ease; */\n  background-color: rgb(99, 99, 255);\n  &:hover {\n    outline: 5px solid rgb(255, 255, 0);\n    border: none;\n    /* box-shadow: 0 0 5px rgba(0, 123, 255, 0.3); */\n  }\n`;\nexport const ButtonAddContacts = styled.button`\n  display: inline-block;\n  background-color: rgb(99, 99, 255);\n  border-radius: 4px;\n  border: 2px solid black;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-right: 32px;\n  padding-left: 32px;\n  min-width: 100%;\n\n  text-decoration: none;\n  text-align: center;\n  font-weight: bold;\n  font-size: 32px;\n  &:hover,\n  :focus,\n  :active {\n    outline: 5px solid rgb(255, 255, 0);\n    border: none;\n    background-color: fuchsia;\n  }\n`;\nexport const Title = styled.h3`margin-bottom: 20px`","import { Formik, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport {\n  Field,\n  Label,\n  ButtonAddContacts,\n  Form,\n  Title,\n} from '../RegisterUserForm/RegisterUserForm.styled.js';\nimport * as authOperation from 'redux/auth/auth-operation';\n//початкові значення форміка\nconst initialValues = { name: '', email: '', password: '' };\n\nexport const RegisterUserForm = () => {\n  //виклик диспечера\n  const dispatch = useDispatch();\n  //отримання даних з редакс\n\n  //додавання контакту при сабміті\n  const handleSabmit = (values, { resetForm }) => {\nconsole.log('values', values);\n    // виклик диспечера для відправки даних в редакс\n    const reg = JSON.stringify({\n      name: values.name.trim(),\n      email: values.email.trim(),\n      password: values.password.trim(),\n    });\nconsole.log('reg', reg);\n    \n    dispatch(\n      authOperation.register({\n        name: values.name.trim(),\n        email: values.email.trim(),\n        password: values.password.trim(),\n      })\n    );\n\n    resetForm();\n  };\n  //схема валідації\n  const schema = yup.object().shape({\n    name: yup.string().required().min(4),\n    email: yup.string().required().min(4),\n    password: yup.string().required().min(4),\n  });\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSabmit}\n      displayName=\"MyForm\"\n    >\n      <Form>\n        <Title>Registaration</Title>\n        <Label htmlFor=\"email\">E-mail</Label>\n        <Field name=\"email\" type=\"email\" />\n        <ErrorMessage name=\"email\" component=\"div\" />\n\n        <Label htmlFor=\"name\">Name</Label>\n        <Field name=\"name\" type=\"name\" />\n        <ErrorMessage name=\"name\" component=\"div\" />\n\n        <Label htmlFor=\"password\">Password</Label>\n        <Field name=\"password\" type=\"password\" />\n        <ErrorMessage name=\"password\" component=\"div\" />\n        <ButtonAddContacts type=\"submit\">sign in</ButtonAddContacts>\n      </Form>\n    </Formik>\n  );\n};\n","// import { Helmet } from 'react-helmet';\nimport { Helmet } from 'react-helmet';\nimport { RegisterUserForm } from '../components/RegisterUserForm/RegisterUserForm.jsx';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterUserForm />\n    </div>\n  );\n}\n"],"names":["Form","styled","FormikForm","Label","Field","FormikField","ButtonAddContacts","Title","initialValues","name","email","password","RegisterUserForm","dispatch","useDispatch","schema","yup","shape","required","min","validationSchema","onSubmit","values","resetForm","console","log","reg","JSON","stringify","trim","authOperation","displayName","htmlFor","type","component","Register","Helmet"],"sourceRoot":""}