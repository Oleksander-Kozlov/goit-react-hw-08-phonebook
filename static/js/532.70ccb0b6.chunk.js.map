{"version":3,"file":"static/js/532.70ccb0b6.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","Pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts;\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\nwidth: 97%;\n  list-style: none;\n  margin-right:0;\n  padding:0  \n`;\n\n//стиль контакта\nexport const CotactItem = styled.li`\n  font-family: 'Harlow Solid Italic', cursive;\n  font-size: 36px;\n\n  display: flex;\n  flex-wrap: nowrap;\n\n  justify-content: space-between;\n  align-items: stretch;\n  margin-bottom: 20px;\n`;\n\nexport const ButtonDelete = styled.button`\n  display: inline-block;\n  background-color: rgb(99, 99, 255);\n  border-radius: 4px;\n  border: 2px solid black;\n  padding: 10px;\n  min-width: min-content;\n  font-family: 'Harlow Solid Italic', cursive;\n  font-weight: bold;\n  font-size: 24px;\n  text-decoration: none;\n  text-align: center;\n  /* height: 50px;\n  width: 50px; */\n  &:hover,\n  :focus,\n  :active {\n    outline: 5px solid rgb(255, 255, 0);\n    border: none;\n    background-color: fuchsia;\n  }\n`;","//redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as operation from 'redux/contacts/operation';\nimport { getContacts } from 'redux/contacts/selectors.js';\n// import { IconButton, CheckIcon } from '@chakra-ui/react';\n//styled\nimport {\n  List,\n  ButtonDelete,\n  CotactItem,\n} from '../ContactList/ContactList.styled.js';\nimport { useEffect } from 'react';\n// import toast from 'react-hot-toast';\n\n\n  \n;\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(operation.fetchContacts());\n  }, [dispatch]);\n  //значення стору редакс\n  const filters = useSelector(state => state.filters) || '';  \n  const { items } = useSelector(getContacts);\n  //диспечер)\n \n//функція фільтрації контактів\nconst getVisibleContacts = (contacts, filters) => {\n  switch (filters) {\n    case filters:\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filters)\n      );\n    default:\n      return contacts;\n  }\n  };\n  \nconst visibleFilter = getVisibleContacts(items, filters)\n  // const optToast = {\n  //   duration: 2000,\n  //   position: 'top-center',\n  //   // Styling\n  //   style: {\n  //     fontSize: \"20px\"\n  //   },\n  //   className: '',\n  //   // Custom Icon\n  //   icon: '❌'\n  // }\n     \n//видалення контакту по айди\n  const handleDelete = (id, name) => {\n    dispatch(operation.removeContact({id, name}));\n        \n    \n  };\n\n    return (\n      <List>\n        {visibleFilter.map(contact => (\n          <CotactItem key={contact.id}>\n            {contact.name}: {contact.number}{' '}\n            <ButtonDelete\n              onClick={() => handleDelete(contact.id, contact.name)}\n            >\n              Delete\n            </ButtonDelete>\n        \n          </CotactItem>\n        ))}\n      </List>\n    );\n};\n","import { Field as FormikField, Form as FormikForm} from 'formik';\nimport styled from 'styled-components';\n \nexport const Form = styled(FormikForm)`\n  max-width: 700px;\n  /* display: flex;\n  flex-direction: column; */\n  /* max-width: 100%; */\n  margin: 0 auto;\n  padding: 10px;\n  margin-bottom: 50px;\n`;\nexport const DivForInput = styled.div`\nmargin-bottom: 1rem;`\n\n\nexport const Label = styled.label`\n  display: block;\n  \n  margin-bottom: 2rem;\n  font-weight: bold;\n`;\nexport const Input = styled.input`\n  display: block;\n  width: 97%;\n  margin-top: 10px;\n  margin-bottom: 32px;\n  padding: 0.5rem;\n  font-size: 2rem;\n  border: 1px solid black;\n  outline: transparent;\n  border-radius: 4px;\n  /* transition: box-shadow 0.3s ease; */\n  background-color: rgb(99, 99, 255);\n  &:hover {\n    outline: 5px solid rgb(255, 255, 0);\n    border: none;\n    /* box-shadow: 0 0 5px rgba(0, 123, 255, 0.3); */\n  }\n`;\nexport const Field = styled(FormikField)`\n  display: block;\n  width: 97%;\n  margin-top: 10px;\n  margin-bottom: 32px;\n  padding: 0.5rem;\n  font-size: 2rem;\n  border: 1px solid black;\n  outline: transparent;\n  border-radius: 4px;\n  /* transition: box-shadow 0.3s ease; */\n  background-color: rgb(99, 99, 255);\n  &:hover {\n    outline: 5px solid rgb(255, 255, 0);\n    border: none;\n    /* box-shadow: 0 0 5px rgba(0, 123, 255, 0.3); */\n  }\n`;\nexport const ButtonAddContacts = styled.button`\n  display: inline-block;\n  background-color: rgb(99, 99, 255);\n  border-radius: 4px;\n  border: 2px solid black;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-right: 32px;\n  padding-left: 32px;\n  min-width: 100%;\n\n  text-decoration: none;\n  text-align: center;\n  font-weight: bold;\n  font-size: 32px;\n  &:hover,\n  :focus,\n  :active {\n    outline: 5px solid rgb(255, 255, 0);\n    border: none;\n    background-color: fuchsia;\n  }\n`;","import React from 'react';\n// import { Notify } from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as operation from 'redux/contacts/operation';\n//формік і валідація\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n//стилі\nimport {\n  Field,\n  Label,\n  ButtonAddContacts,\n  Form,\n} from '../ContactForm/ContactForm.styled.js';\nimport { getContacts } from 'redux/contacts/selectors.js';\nimport toast from 'react-hot-toast';\n//початкові значення форміка\nconst initialValues = { name: '', number: '' };\n\nexport const ContactForm = () => {\n  //виклик диспечера\n  const dispatch = useDispatch();\n  //отримання даних з редакс\n  const { items } = useSelector(getContacts);\n  //додавання контакту при сабміті\n  const handleSabmit = (values, { resetForm }) => {\n    //перевірка на дубляж\n    const haveNameInPhonebook = items.some(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    );\n    //повідомлення користувача\n      if (haveNameInPhonebook) {\n        return toast.error(`${values.name} is already in contacts`)(\n        \n          {    \n            duration: 1000,\n            position: 'top-center',\n          }\n        );\n      // Notify.failure(`${values.name} is already in contacts`);\n      \n      \n      \n    }\n    // виклик диспечера для відправки даних в редакс\n    dispatch(\n      operation.addContact({\n        name: values.name.trim(),\n        number: values.number.trim(),\n      })\n    );\n\n    resetForm();\n  };\n  //схема валідації\n  const schema = yup.object().shape({\n    name: yup.string().required().min(4),\n    number: yup.number().required().min(4),\n  });\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSabmit}\n    >\n      <Form>\n        <Label htmlFor=\"name\">Name</Label>\n        <Field name=\"name\" type=\"name\" />\n        <ErrorMessage name=\"name\" component=\"div\" />\n\n        <Label htmlFor=\"number\">Number</Label>\n        <Field name=\"number\" type=\"tel\" />\n        <ErrorMessage name=\"number\" component=\"div\" />\n\n        <ButtonAddContacts type=\"submit\">add contacts</ButtonAddContacts>\n      </Form>\n      \n    </Formik>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filter } from 'redux/contacts/filtersSlise.js';\nimport { Input, Label } from '../ContactForm/ContactForm.styled.js';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  //стейт для фільтра\n  const [filterok, setFilter] = useState('');\n  // контрольований інпут\n  const handleFind = e => {\n    setFilter(e.target.value);\n   \n    dispatch(filter(e.target.value));\n  };\n\n  return (\n    <div>\n      <Label htmlFor=\"\">\n        Find contacts by name\n        <Input\n          name=\"filter\"\n          type=\"text\"\n          value={filterok}\n          onChange={handleFind}\n        />\n      </Label>\n    </div>\n  );\n};\n\n","import { useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter.jsx';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Contacts() {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <ContactForm />\n      {isLoading && <Loader />}\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","selectIsLoading","isLoading","List","styled","CotactItem","ButtonDelete","ContactList","dispatch","useDispatch","useEffect","operation","filters","useSelector","visibleFilter","filter","contact","name","toLowerCase","includes","getVisibleContacts","items","map","number","onClick","id","Form","FormikForm","Label","Input","Field","FormikField","ButtonAddContacts","initialValues","ContactForm","schema","yup","shape","required","min","validationSchema","onSubmit","values","resetForm","some","toast","duration","position","trim","htmlFor","type","component","Filter","useState","filterok","setFilter","value","onChange","e","target","Contacts","Helmet","Loader"],"sourceRoot":""}