{"version":3,"file":"static/js/677.f32d6826.chunk.js","mappings":"iQAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uLAaJE,GAJcF,EAAAA,GAAAA,IAAH,gDAIHA,EAAAA,GAAAA,MAAH,4FAwBLG,GAlBQH,EAAAA,GAAAA,MAAH,obAkBGA,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,obAkBLK,EAAoBL,EAAAA,GAAAA,OAAH,ieAuBjBM,EAAQN,EAAAA,GAAAA,GAAH,gD,oBCrEZO,EAAgB,CAAEC,MAAO,GAAIC,SAAU,IAEvCC,EAASC,EAAAA,KAAaC,MAAM,CAChCJ,MAAOG,EAAAA,KAAaE,WAAWC,IAAI,GACnCL,SAAUE,EAAAA,KAAaE,WAAWC,IAAI,KAE3BC,EAAQ,WAEnB,IAAMC,GAAWC,EAAAA,EAAAA,MAwBjB,OACE,SAAC,KAAD,CACEV,cAAeA,EACfW,iBAAkBR,EAClBS,SAxBiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAGjCC,QAAQC,IAAI,YAAaH,GAMtBJ,EACEQ,EAAAA,GAAoB,CAClBhB,MAAOY,EAAOZ,MAAMiB,OACpBhB,SAAUW,EAAOX,SAASgB,UAI9BJ,GACD,EAIC,UAKE,UAACtB,EAAD,YACE,SAACO,EAAD,UAAO,WAEP,SAACJ,EAAD,CAAOwB,QAAQ,QAAf,SAAuB,YACvB,SAACvB,EAAD,CAAOwB,KAAK,WACZ,SAAC,KAAD,CAAcA,KAAK,QAAQC,UAAU,SAErC,SAAC1B,EAAD,CAAOwB,QAAQ,WAAf,SAA0B,cAC1B,SAACvB,EAAD,CAAOwB,KAAK,cACZ,SAAC,KAAD,CAAcA,KAAK,WAAWC,UAAU,SAExC,SAACvB,EAAD,CAAmBwB,KAAK,SAAxB,SAAiC,cAIxC,EC5Dc,SAASC,IAEtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,2BAAO,aAET,SAAChB,EAAD,MAGL,C","sources":["components/LogIn/LogIn.styled.js","components/LogIn/LogIn.jsx","Pages/LogIn.jsx"],"sourcesContent":["import { Field as FormikField, Form as FormikForm } from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  max-width: 700px;\n  /* display: flex;\n  flex-direction: column; */\n  /* max-width: 100%; */\n  margin: 0 auto;\n  padding: 10px;\n  margin-bottom: 50px;\n`;\nexport const DivForInput = styled.div`\n  margin-bottom: 1rem;\n`;\n\nexport const Label = styled.label`\n  display: block;\n\n  margin-bottom: 2rem;\n  font-weight: bold;\n`;\nexport const Input = styled.input`\n  display: block;\n  width: 97%;\n  margin-top: 10px;\n  margin-bottom: 32px;\n  padding: 0.5rem;\n  font-size: 2rem;\n  border: 1px solid black;\n  outline: transparent;\n  border-radius: 4px;\n  /* transition: box-shadow 0.3s ease; */\n  background-color: rgb(99, 99, 255);\n  &:hover {\n    outline: 5px solid rgb(255, 255, 0);\n    border: none;\n    /* box-shadow: 0 0 5px rgba(0, 123, 255, 0.3); */\n  }\n`;\nexport const Field = styled(FormikField)`\n  display: block;\n  width: 97%;\n  margin-top: 10px;\n  margin-bottom: 32px;\n  padding: 0.5rem;\n  font-size: 2rem;\n  border: 1px solid black;\n  outline: transparent;\n  border-radius: 4px;\n  /* transition: box-shadow 0.3s ease; */\n  background-color: rgb(99, 99, 255);\n  &:hover {\n    outline: 5px solid rgb(255, 255, 0);\n    border: none;\n    /* box-shadow: 0 0 5px rgba(0, 123, 255, 0.3); */\n  }\n`;\nexport const ButtonAddContacts = styled.button`\n  display: inline-block;\n  background-color: rgb(99, 99, 255);\n  border-radius: 4px;\n  border: 2px solid black;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-right: 32px;\n  padding-left: 32px;\n  min-width: 100%;\n\n  text-decoration: none;\n  text-align: center;\n  font-weight: bold;\n  font-size: 32px;\n  &:hover,\n  :focus,\n  :active {\n    outline: 5px solid rgb(255, 255, 0);\n    border: none;\n    background-color: fuchsia;\n  }\n`;\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n`;","import { Formik, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport {\n  Field,\n  Label,\n  ButtonAddContacts,\n  Form,\n  Title\n} from './LogIn.styled.js';\nimport * as authOperation from 'redux/auth/auth-operation';\n//початкові значення форміка\nconst initialValues = { email: '', password: '' };\n//схема валідації\nconst schema = yup.object().shape({\n  email: yup.string().required().min(4),\n  password: yup.string().required().min(4),\n});\nexport const LogIn = () => {\n  //виклик диспечера\n  const dispatch = useDispatch();\n  //отримання даних з редакс\n\n  //додавання контакту при сабміті\n  const handleSabmit = (values, { resetForm }) => {\n \n    // виклик диспечера для відправки даних в редакс\n console.log('valuesLOG', values);\n// const log = JSON.stringify({\n//   name: values.name.trim(),\n//   email: values.email.trim(),\n// });\n// console.log('loglog', log);\n    dispatch(\n      authOperation.logIn({\n        email: values.email.trim(),\n        password: values.password.trim(),\n      })\n    );\n\n    resetForm();\n  };\n\n  \n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSabmit}\n    >\n      <Form>\n        <Title>LogIn</Title>\n\n        <Label htmlFor=\"email\">E-mail</Label>\n        <Field name=\"email\"  />\n        <ErrorMessage name=\"email\" component=\"div\" />\n\n        <Label htmlFor=\"password\">password</Label>\n        <Field name=\"password\"  />\n        <ErrorMessage name=\"password\" component=\"div\" />\n\n        <ButtonAddContacts type=\"submit\">Enter</ButtonAddContacts>\n      </Form>\n    </Formik>\n  );\n};\n","// import { Helmet } from 'react-helmet';\nimport { Helmet } from 'react-helmet';\nimport { LogIn } from '../components/LogIn/LogIn.jsx';\n\n\nexport default function Login() {\n  \n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LogIn />\n    </div>\n  );\n}\n"],"names":["Form","styled","FormikForm","Label","Field","FormikField","ButtonAddContacts","Title","initialValues","email","password","schema","yup","shape","required","min","LogIn","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","console","log","authOperation","trim","htmlFor","name","component","type","Login","Helmet"],"sourceRoot":""}